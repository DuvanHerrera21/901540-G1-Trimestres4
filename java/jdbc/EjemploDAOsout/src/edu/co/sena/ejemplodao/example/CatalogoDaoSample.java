/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */
package edu.co.sena.ejemplodao.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import edu.co.sena.ejemplodao.dao.CatalogoDao;
import edu.co.sena.ejemplodao.dto.Catalogo;
import edu.co.sena.ejemplodao.exceptions.CatalogoDaoException;
import edu.co.sena.ejemplodao.factory.CatalogoDaoFactory;
import java.util.Arrays;
import java.util.List;

public class CatalogoDaoSample {

    /**
     * Method 'main'
     *
     * @param arg
     * @throws Exception
     */
    public static void main(String[] arg) throws Exception {
        // Uncomment one of the lines below to test the generated code
        CatalogoDao _dao = getCatalogoDao();
        Catalogo result[] = _dao.findAll();
        List<Catalogo> lista = Arrays.asList(result);
        for (Catalogo catalogo : lista) {
            System.out.println(catalogo.toString());
        }
        //findAll();
        // findWhereIdCatalogoEquals(0);
        // findWhereNombreCatalogoEquals("");
        // findWhereDescripcionEquals("");
    }

    /**
     * Method 'findAll'
     *
     */
    public static void findAll() {
        try {
            CatalogoDao _dao = getCatalogoDao();
            Catalogo _result[] = _dao.findAll();
            for (int i = 0; i < _result.length; i++) {
                display(_result[i]);
            }
            
        } catch (Exception _e) {
            _e.printStackTrace();
        }
        
    }

    /**
     * Method 'findWhereIdCatalogoEquals'
     *
     * @param idCatalogo
     */
    public static void findWhereIdCatalogoEquals(int idCatalogo) {
        try {
            CatalogoDao _dao = getCatalogoDao();
            Catalogo _result[] = _dao.findWhereIdCatalogoEquals(idCatalogo);
            for (int i = 0; i < _result.length; i++) {
                display(_result[i]);
            }
            
        } catch (Exception _e) {
            _e.printStackTrace();
        }
        
    }

    /**
     * Method 'findWhereNombreCatalogoEquals'
     *
     * @param nombreCatalogo
     */
    public static void findWhereNombreCatalogoEquals(String nombreCatalogo) {
        try {
            CatalogoDao _dao = getCatalogoDao();
            Catalogo _result[] = _dao.findWhereNombreCatalogoEquals(nombreCatalogo);
            for (int i = 0; i < _result.length; i++) {
                display(_result[i]);
            }
            
        } catch (Exception _e) {
            _e.printStackTrace();
        }
        
    }

    /**
     * Method 'findWhereDescripcionEquals'
     *
     * @param descripcion
     */
    public static void findWhereDescripcionEquals(String descripcion) {
        try {
            CatalogoDao _dao = getCatalogoDao();
            Catalogo _result[] = _dao.findWhereDescripcionEquals(descripcion);
            for (int i = 0; i < _result.length; i++) {
                display(_result[i]);
            }
            
        } catch (Exception _e) {
            _e.printStackTrace();
        }
        
    }

    /**
     * Method 'getCatalogoDao'
     *
     * @return CatalogoDao
     */
    public static CatalogoDao getCatalogoDao() {
        return CatalogoDaoFactory.create();
    }

    /**
     * Method 'display'
     *
     * @param dto
     */
    public static void display(Catalogo dto) {
        StringBuffer buf = new StringBuffer();
        buf.append(dto.getIdCatalogo());
        buf.append(", ");
        buf.append(dto.getNombreCatalogo());
        buf.append(", ");
        buf.append(dto.getDescripcion());
        System.out.println(buf.toString());
    }
    
}
