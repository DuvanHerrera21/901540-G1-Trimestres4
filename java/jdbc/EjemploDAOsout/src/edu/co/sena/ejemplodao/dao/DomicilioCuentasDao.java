/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.co.sena.ejemplodao.dao;

import edu.co.sena.ejemplodao.dto.*;
import edu.co.sena.ejemplodao.exceptions.*;

public interface DomicilioCuentasDao
{
	/** 
	 * Inserts a new row in the domicilio_cuentas table.
	 */
	public DomicilioCuentasPk insert(DomicilioCuentas dto) throws DomicilioCuentasDaoException;

	/** 
	 * Updates a single row in the domicilio_cuentas table.
	 */
	public void update(DomicilioCuentasPk pk, DomicilioCuentas dto) throws DomicilioCuentasDaoException;

	/** 
	 * Deletes a single row in the domicilio_cuentas table.
	 */
	public void delete(DomicilioCuentasPk pk) throws DomicilioCuentasDaoException;

	/** 
	 * Returns the rows from the domicilio_cuentas table that matches the specified primary-key value.
	 */
	public DomicilioCuentas findByPrimaryKey(DomicilioCuentasPk pk) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'CUENTA_TIPO_DOCUMENTO_TIPO_DOCUMENTO = :cuentaTipoDocumentoTipoDocumento AND CUENTA_NUMERO_DOCUMENTO = :cuentaNumeroDocumento'.
	 */
	public DomicilioCuentas findByPrimaryKey(String cuentaTipoDocumentoTipoDocumento, String cuentaNumeroDocumento) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria ''.
	 */
	public DomicilioCuentas[] findAll() throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'CUENTA_TIPO_DOCUMENTO_TIPO_DOCUMENTO = :cuentaTipoDocumentoTipoDocumento AND CUENTA_NUMERO_DOCUMENTO = :cuentaNumeroDocumento'.
	 */
	public DomicilioCuentas[] findByCuenta(String cuentaTipoDocumentoTipoDocumento, String cuentaNumeroDocumento) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'MUNICIPIO_ID_MUNICIPIO = :municipioIdMunicipio'.
	 */
	public DomicilioCuentas[] findByMunicipio(int municipioIdMunicipio) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'DIRECCION = :direccion'.
	 */
	public DomicilioCuentas[] findWhereDireccionEquals(String direccion) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'TELEFONO = :telefono'.
	 */
	public DomicilioCuentas[] findWhereTelefonoEquals(String telefono) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'BARRIO = :barrio'.
	 */
	public DomicilioCuentas[] findWhereBarrioEquals(String barrio) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'LOCALIDAD = :localidad'.
	 */
	public DomicilioCuentas[] findWhereLocalidadEquals(String localidad) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'CORREO_POSTAL = :correoPostal'.
	 */
	public DomicilioCuentas[] findWhereCorreoPostalEquals(String correoPostal) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'MUNICIPIO_ID_MUNICIPIO = :municipioIdMunicipio'.
	 */
	public DomicilioCuentas[] findWhereMunicipioIdMunicipioEquals(int municipioIdMunicipio) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'CUENTA_TIPO_DOCUMENTO_TIPO_DOCUMENTO = :cuentaTipoDocumentoTipoDocumento'.
	 */
	public DomicilioCuentas[] findWhereCuentaTipoDocumentoTipoDocumentoEquals(String cuentaTipoDocumentoTipoDocumento) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the criteria 'CUENTA_NUMERO_DOCUMENTO = :cuentaNumeroDocumento'.
	 */
	public DomicilioCuentas[] findWhereCuentaNumeroDocumentoEquals(String cuentaNumeroDocumento) throws DomicilioCuentasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the specified arbitrary SQL statement
	 */
	public DomicilioCuentas[] findByDynamicSelect(String sql, Object[] sqlParams) throws DomicilioCuentasDaoException;

	/** 
	 * Returns all rows from the domicilio_cuentas table that match the specified arbitrary SQL statement
	 */
	public DomicilioCuentas[] findByDynamicWhere(String sql, Object[] sqlParams) throws DomicilioCuentasDaoException;

}
